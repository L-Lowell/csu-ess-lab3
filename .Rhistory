geom_area(fill = "blue", alpha = 0.5) +
geom_line(color = "blue") +  # Use geom_line to create a line plot
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +  # Apply a minimal theme for a clean look
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Display the plot
print(plot_cumulative_cases)
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop')
# Check the aggregated data
print(head(total_cumulative_cases_by_date))
# Set up a ggplot for the total cumulative cases
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_ribbon(aes(ymin = lag(total_cumulative_cases, default = 0), ymax = total_cumulative_cases),
fill = "blue", alpha = 0.3) +  # Creates shaded area under the line
geom_line(color = "blue", size = 1.2) +
geom_line(color = "blue") +  # Use geom_line to create a line plot
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +  # Apply a minimal theme for a clean look
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Display the plot
print(plot_cumulative_cases)
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Convert `date` to Date format
covid_data <- covid_data %>%
mutate(date = as.Date(date))
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
# Check the structure of the data
print(head(total_cumulative_cases_by_date))
# ✅ Use `geom_ribbon()` instead of `geom_area()`
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_ribbon(aes(ymin = lag(total_cumulative_cases, default = 0), ymax = total_cumulative_cases),
fill = "blue", alpha = 0.3) +  # Creates shaded area under the line
geom_line(color = "blue", size = 1.2) +  # Keeps the line on top for clear trend visualization
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_cumulative_cases)
# Save the plot
ggsave("cumulative_cases_usa_filled.png", plot_cumulative_cases, width = 12, height = 8, path = "path/to/your/img/directory/")
0
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop')
# Check the aggregated data
print(head(total_cumulative_cases_by_date))
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
# Set up a ggplot for the total cumulative cases
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue", alpha = 0.3) +  # Creates shaded area under the line
geom_line(color = "blue", size = 1.2) +  # Keeps the line on top for clear trend visualization
scale_y_continuous(limits = c(min_cases, max_cases)) +  # Starts y-axis at the lowest cumulative case count
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
# Display the plot
print(plot_cumulative_cases)
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Convert `date` to Date format
covid_data <- covid_data %>%
mutate(date = as.Date(date))
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
# Get the minimum and maximum cumulative case counts
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
# Set up a ggplot with adjusted y-axis limits
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue", alpha = 0.3) +  # Creates shaded area under the line
geom_line(color = "blue", size = 1.2) +  # Keeps the line on top for clear trend visualization
scale_y_continuous(limits = c(min_cases, max_cases)) +  # Starts y-axis at the lowest cumulative case count
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_cumulative_cases)
# Save the plot
ggsave("cumulative_cases_usa_filled.png", plot_cumulative_cases, width = 12, height = 8, path = "path/to/your/img/directory/")
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Convert `date` to Date format
covid_data <- covid_data %>%
mutate(date = as.Date(date))
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
# Get the minimum and maximum cumulative case counts
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
# Set up a ggplot with adjusted y-axis limits
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +  # Creates shaded area under the line
geom_line(color = "blue") +  # Keeps the line on top for clear trend visualization
scale_y_continuous(limits = c(min_cases, max_cases)) +  # Starts y-axis at the lowest cumulative case count
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
# Display the plot
print(plot_cumulative_cases)
library(tidyverse)
# Load data
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
# Convert `date` to Date format
covid_data <- covid_data %>%
mutate(date = as.Date(date))
# Aggregate cumulative cases by date across the whole country
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
# Get the minimum cumulative case count (to start y-axis correctly)
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
# ✅ Use `geom_ribbon()` instead of `geom_area()`
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_ribbon(aes(ymin = min_cases, ymax = total_cumulative_cases), fill = "blue", alpha = 0.3) +  # Correct area fill
geom_line(color = "blue", size = 1.2) +  # Keeps the line on top for clear trend visualization
scale_y_continuous(limits = c(min_cases, max_cases)) +  # Ensures graph starts at first case count
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot_cumulative_cases)
# Save the plot
ggsave("cumulative_cases_usa_filled.png", plot_cumulative_cases, width = 12, height = 8, path = "path/to/your/img/directory/")
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
# Display the plot
print(plot_cumulative_cases)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
print(plot_cumulative_cases)
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
print(plot_cumulative_cases)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
print(plot_cumulative_cases)
# Save the plot
ggsave("cumulative_cases_usa_filled.png", plot_cumulative_cases, width = 12, height = 8, path = "path/to/your/img/directory/")
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_area(aes(ymin = min_cases, ymax = total_cumulative_cases), fill = "blue") +
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
print(plot_cumulative_cases)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
#To make the days of the plot noticably different (aka not a massive block of color) I foind min/mix to limit the graph
min_cases <- min(total_cumulative_cases_by_date$total_cumulative_cases)
max_cases <- max(total_cumulative_cases_by_date$total_cumulative_cases)
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_ribbon(aes(ymin = min_cases, ymax = total_cumulative_cases), fill = "blue", alpha = 0.3) +  #geom_area doesn't work but this does for some reason
geom_line(color = "blue") +
scale_y_continuous(limits = c(min_cases, max_cases)) +
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
# Display the plot
print(plot_cumulative_cases)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_line(color = "blue") +
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal() +
# Display the plot
print(plot_cumulative_cases)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
plot_cumulative_cases <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_line(color = "blue") +
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
# Display the plot
print(plot_cumulative_cases)
# Save the plot
ggsave("cumulative_cases_usa_filled.png")
# Display the plot
print(plot_cumulative_cases)
# Name:Lance Lowell
# Date: 2/19/25
# Purpose: COVID data set visualization exercise
# Load stuff
library(tidyverse)
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
glimpse(covid_data)
#Identify the six states with the most current cases
latest_date <- max(covid_data$date)
top_states <- covid_data %>%
filter(date == latest_date) %>%
group_by(state) %>%
summarise(total_cases = sum(cases), .groups = 'drop') %>%
arrange(desc(total_cases)) %>%
slice_head(n = 6)%>%
glimpse()
#"California", "Texas", "Florida", "New York", "Illinois", "Pennsylvana" <- different from example
#Filter the raw data to those 6 states
top_states <- latest_cases_by_state$state
filtered_data <- covid_data %>%
filter(state %in% top_states) %>%
group_by(state, date)%>%
summarise(plswork = sum(cases), .groups = 'drop')%>%
glimpse()
#IT works!
#Set up a ggplot
plot1 <- ggplot(filtered_data, aes(x = date, y = plswork, group = state)) +
geom_smooth(aes(color = state), method = "loess", se = FALSE, span = 0.2) +
facet_wrap(~ state, scales = "free_y", nrow = 6)  +
labs(title = "Cumulative Case Counts: COVID-19 by Lance",
x = "Sate",
y = "Cumulative Cases")
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Save the plot to a file
ggsave("smooth_cumulative_cases_top_states.png", plot, width = 10, height = 20, dpi = 300)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
plot2 <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_line(color = "blue") +
labs(title = "Cumulative COVID-19 Cases in the USA",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
# Display the plot
print(plot2)
# Save the plot
ggsave("cumulative_cases_usa_filled.png")
# Name:Lance Lowell
# Date: 2/19/25
# Purpose: COVID data set visualization exercise
# Load stuff
library(tidyverse)
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
glimpse(covid_data)
#Identify the six states with the most current cases
latest_date <- max(covid_data$date)
top_states <- covid_data %>%
filter(date == latest_date) %>%
group_by(state) %>%
summarise(total_cases = sum(cases), .groups = 'drop') %>%
arrange(desc(total_cases)) %>%
slice_head(n = 6)%>%
glimpse()
#"California", "Texas", "Florida", "New York", "Illinois", "Pennsylvana" <- different from example
#Filter the raw data to those 6 states
top_states <- latest_cases_by_state$state
filtered_data <- covid_data %>%
filter(state %in% top_states) %>%
group_by(state, date)%>%
summarise(plswork = sum(cases), .groups = 'drop')%>%
glimpse()
#IT works!
#Set up a ggplot
plot1 <- ggplot(filtered_data, aes(x = date, y = plswork, group = state)) +
geom_smooth(aes(color = state), method = "loess", se = FALSE, span = 0.2) +
facet_wrap(~ state, scales = "free_y", nrow = 6)  +
labs(title = "Cumulative Case Counts: COVID-19 by Lance",
x = "Sate",
y = "Cumulative Cases")
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Save the plot to a file
ggsave("smooth_cumulative_cases_top_states.png", plot, width = 10, height = 20, dpi = 300)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
plot2 <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_line(color = "blue") +
labs(title = "Cumulative COVID-19 Cases in the USA by Lance",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
# Display the plot
print(plot2)
# Name:Lance Lowell
# Date: 2/19/25
# Purpose: COVID data set visualization exercise
# Load stuff
library(tidyverse)
url <- "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv"
covid_data <- read_csv(url)
glimpse(covid_data)
#Identify the six states with the most current cases
latest_date <- max(covid_data$date)
top_states <- covid_data %>%
filter(date == latest_date) %>%
group_by(state) %>%
summarise(total_cases = sum(cases), .groups = 'drop') %>%
arrange(desc(total_cases)) %>%
slice_head(n = 6)%>%
glimpse()
#"California", "Texas", "Florida", "New York", "Illinois", "Pennsylvana" <- different from example
#Filter the raw data to those 6 states
top_states <- latest_cases_by_state$state
filtered_data <- covid_data %>%
filter(state %in% top_states) %>%
group_by(state, date)%>%
summarise(plswork = sum(cases), .groups = 'drop')%>%
glimpse()
#IT works!
#Set up a ggplot
plot1 <- ggplot(filtered_data, aes(x = date, y = plswork, group = state)) +
geom_smooth(aes(color = state), method = "loess", se = FALSE, span = 0.2) +
facet_wrap(~ state, scales = "free_y", nrow = 6)  +
labs(title = "Cumulative Case Counts: COVID-19 by Lance",
x = "Sate",
y = "Cumulative Cases")
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
# Save the plot to a file
ggsave(file.path("img", "smooth_cumulative_cases_top_states.png"), plot = plot1)
# Identify the total cases each day in the whole country
covid_data <- covid_data %>%
mutate(date = as.Date(date))
total_cumulative_cases_by_date <- covid_data %>%
group_by(date) %>%
summarise(total_cumulative_cases = sum(cases), .groups = 'drop') %>%
arrange(date)
#Set up a ggplot –> add layers –> add labels –> add a theme
plot2 <- ggplot(total_cumulative_cases_by_date, aes(x = date, y = total_cumulative_cases)) +
geom_line(color = "blue") +
labs(title = "Cumulative COVID-19 Cases in the USA by",
x = "Date",
y = "Total Cumulative Cases") +
theme_minimal()
# Display the plot
print(plot2)
# Save the plot
ggsave("cumulative_cases_usa_filled.png")
# Save the plot
ggsave(file.path("img", "cumulative_cases_usa_filled.png"), plot = plot2)
